<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>淼 Be Water</title>
  
  <subtitle>Ivan Wei</subtitle>
  <link href="https://blog.ivanwei.co/atom.xml" rel="self"/>
  
  <link href="https://blog.ivanwei.co/"/>
  <updated>2023-06-08T03:11:09.489Z</updated>
  <id>https://blog.ivanwei.co/</id>
  
  <author>
    <name>Wei Hong-Lin (Ivan Wei)</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DCIT 改版 Part 2</title>
    <link href="https://blog.ivanwei.co/zh-tw/2023-06-07-13-i_kwdoc3r1-85obyj5/"/>
    <id>https://blog.ivanwei.co/zh-tw/2023-06-07-13-i_kwdoc3r1-85obyj5/</id>
    <published>2023-06-06T23:02:34.000Z</published>
    <updated>2023-06-08T03:11:09.489Z</updated>
    
    <content type="html"><![CDATA[<p>Last updated: 2023-06-07 16:38:11</p><p><img src="https://github.com/IvanWei/blog/assets/6157049/964a8788-0cf4-4a86-a37f-bc9a522eb918" alt="DCIT 行事曆"><br>(source: <a href="https://dcit.ivanwei.co/">DCIT 行事曆</a>)</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>距離上回寫 Blog 已是 <a href="https://blog.ivanwei.co/zh-tw/2022-06-16-12-i_kwdoc3r1-85l5yep/">2022年6月16日</a> 關於 Covid-19 後期各國通膨率的分享，最後一篇有關 <a href="https://dcit.ivanwei.co/">DCIT 行事曆 (Developer Conferences In Taiwan)</a> 的改版則是 <a href="https://blog.ivanwei.co/zh-tw/2020-10-04-dcit-upgrade/">2020年10月4日</a> ，最近 DCIT 行事曆 Part2 改版完畢，寫個分享記錄這段時間做了什麼。</p><p>這段日子 <a href="https://github.com/TGmeetup">TGmeetup</a> 似乎暫停運作，很懷念當初剛做好 DCIT 行事曆時看到 TGmeetup 時有種英雄惜英雄的感覺，為此寫 <a href="https://blog.ivanwei.co/zh-tw/2018-05-16-open-source-and-privacy/">DCIT 與隱私</a> 時特別和 TGmeetup 做比較，避免 DCIT 和 TGmeetup 打架，希望未來 TGmeetup 能再次運作起來 (DCIT team 目前只有我一人，資料沒更新表示我懶)。 😆</p><span id="more"></span><h2 id="架構"><a href="#架構" class="headerlink" title="架構"></a>架構</h2><h3 id="3-項重要更動"><a href="#3-項重要更動" class="headerlink" title="3 項重要更動"></a>3 項重要更動</h3><ol><li><a href="https://dcit-calendar.ivanwei.co/">dcit-calendar.ivanwei.co</a> 頁面整併至 <a href="https://dcit.ivanwei.co/calendar">dcit.ivanwei.co&#x2F;calendar</a> ，並將原 Domain 導向設定為 301 Redirect 到 <a href="https://dcit.ivanwei.co/">DCIT 列表版</a></li><li><a href="https://github.com/IvanWei/developer-conferences-in-taiwan">developer-conferences-in-taiwan 的 repository</a> 移除 <a href="https://dcit-calendar.ivanwei.co/">舊的 DCIT 行事曆</a> 頁面檔案</li><li><a href="https://dcit.ivanwei.co/">DCIT 行事曆</a> 的內容一律從管理的 Google sheet 獲取</li></ol><blockquote><p>README 版則保留在 <a href="https://github.com/IvanWei/developer-conferences-in-taiwan">developer-conferences-in-taiwan</a> repository</p></blockquote><h2 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h2><ol><li>活動組織頁<ul><li><img width="1439" alt="DCIT 行事曆 - 活動組織 " src="https://github.com/IvanWei/blog/assets/6157049/991b15bf-3cea-4132-8ce0-d025b95dc2c2"></li></ul></li><li>RSS 功能 ( 想即時取得消息可以至下方訂閱)<ul><li><a href="https://dcit.ivanwei.co/rss.xml">Link</a></li></ul></li><li>加上 <a href="https://www.schema.org/">Schema</a> 讓 Googlebot 看懂更多</li></ol><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>在 Google 搜尋 DCIT 、 DCIT 行事曆、 developer conference in taiwan 等現在都無法顯示 <a href="https://dcit.ivanwei.co/">dcit.ivanwei.co</a> ，透過  <code>site:dcit.ivanwei.co</code> 和 <code>dcit.ivanwei.co</code> 可以正常找到內容，唯有關鍵字無法找到；經過使用 <a href="https://blog.ivanwei.co/">此 Blog 網站</a> 用關鍵字查詢，大致確定內容不被 Googlebot 喜歡。</p><img width="1438" alt="Google Search" src="https://github.com/IvanWei/blog/assets/6157049/491a4a9a-dced-4e20-8bef-8674a35d284f">(source: [Google search](https://www.google.com/))<p>接下來改版待辦事項如下 😆</p><ol><li>SEO 的研究之路<ul><li><a href="https://www.google.com/intl/zh-TW/search/howsearchworks/our-history/">Google search 沿革之路</a></li><li><a href="https://ranking.works/knowledge/google%E6%BC%94%E7%AE%97%E6%B3%95/">Ranking</a></li></ul></li><li>DCIT 功能、畫面串接到 LINE Bot 、 Facebook page 、 <a href="https://notify-bot.line.me/zh_TW/">LINE Notify</a> 或 <a href="https://ifttt.com/">IFTTT</a></li></ol><h2 id="有想參與此專案或覺得可以做得更好-How-to-join-this-project"><a href="#有想參與此專案或覺得可以做得更好-How-to-join-this-project" class="headerlink" title="有想參與此專案或覺得可以做得更好 (How to join this project)"></a>有想參與此專案或覺得可以做得更好 (How to join this project)</h2><ul><li>新增修改 <a href="https://dcit.ivanwei.co/">DCIT 行事曆</a> 功能、頁面到 <a href="https://github.com/IvanWei/dcit-web-calendar">這裡</a> 送 PR<ul><li>採用 Next.js 的 SSG 方案</li></ul></li><li>參與國內外 Conference 資料收集更新到 <a href="https://docs.google.com/spreadsheets/d/1WFxqI3Ow_9GC_h5Xd7NUy_b1X-U8Ptb-u-arLGYtmGQ/edit?usp=sharing">這裡</a> 申請 Google sheet 編輯權限，同時到 <a href="https://www.facebook.com/iivanwei/">我的 Facebook</a> 介紹你是誰、用哪一個 Email 申請權限<ul><li><img width="1440" alt="DCIT 行事曆資料管理" src="https://github.com/IvanWei/blog/assets/6157049/b5879b32-8e6c-43d2-b8bd-f4aea621ce99"></li></ul></li></ul><p>大致 DCIT 運作方式可以到 <a href="https://github.com/IvanWei/developer-conferences-in-taiwan/wiki">developer-conferences-in-taiwan 的 wiki</a> 了解。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Last updated: 2023-06-07 16:38:11&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/IvanWei/blog/assets/6157049/964a8788-0cf4-4a86-a37f-bc9a522eb918&quot; alt=&quot;DCIT 行事曆&quot;&gt;&lt;br&gt;(source: &lt;a href=&quot;https://dcit.ivanwei.co/&quot;&gt;DCIT 行事曆&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;距離上回寫 Blog 已是 &lt;a href=&quot;https://blog.ivanwei.co/zh-tw/2022-06-16-12-i_kwdoc3r1-85l5yep/&quot;&gt;2022年6月16日&lt;/a&gt; 關於 Covid-19 後期各國通膨率的分享，最後一篇有關 &lt;a href=&quot;https://dcit.ivanwei.co/&quot;&gt;DCIT 行事曆 (Developer Conferences In Taiwan)&lt;/a&gt; 的改版則是 &lt;a href=&quot;https://blog.ivanwei.co/zh-tw/2020-10-04-dcit-upgrade/&quot;&gt;2020年10月4日&lt;/a&gt; ，最近 DCIT 行事曆 Part2 改版完畢，寫個分享記錄這段時間做了什麼。&lt;/p&gt;
&lt;p&gt;這段日子 &lt;a href=&quot;https://github.com/TGmeetup&quot;&gt;TGmeetup&lt;/a&gt; 似乎暫停運作，很懷念當初剛做好 DCIT 行事曆時看到 TGmeetup 時有種英雄惜英雄的感覺，為此寫 &lt;a href=&quot;https://blog.ivanwei.co/zh-tw/2018-05-16-open-source-and-privacy/&quot;&gt;DCIT 與隱私&lt;/a&gt; 時特別和 TGmeetup 做比較，避免 DCIT 和 TGmeetup 打架，希望未來 TGmeetup 能再次運作起來 (DCIT team 目前只有我一人，資料沒更新表示我懶)。 😆&lt;/p&gt;</summary>
    
    
    
    
    <category term="SEO" scheme="https://blog.ivanwei.co/tags/SEO/"/>
    
    <category term="Conference" scheme="https://blog.ivanwei.co/tags/Conference/"/>
    
    <category term="Program" scheme="https://blog.ivanwei.co/tags/Program/"/>
    
  </entry>
  
  <entry>
    <title>閒話加長 - 2022年各國開始馴服一匹名駒 通膨</title>
    <link href="https://blog.ivanwei.co/zh-tw/2022-06-16-12-i_kwdoc3r1-85l5yep/"/>
    <id>https://blog.ivanwei.co/zh-tw/2022-06-16-12-i_kwdoc3r1-85l5yep/</id>
    <published>2022-06-16T03:35:54.000Z</published>
    <updated>2023-06-08T03:11:09.489Z</updated>
    
    <content type="html"><![CDATA[<p>Last updated: 2023-06-07 05:04:33</p><p><img src="https://user-images.githubusercontent.com/6157049/174054919-95fcd121-e972-4a02-9e33-e8d0c9a33648.png" alt="[Horse-drawn Vehicle](https://www.nicepng.com/maxp/u2t4i1q8y3a9o0e6/)"><br>(source: <a href="https://www.nicepng.com/">NicePNG</a>)</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前腳 <a href="https://www.cna.com.tw/news/aopl/202206160002.aspx">美國聯準會甩出升息 3 碼</a> 的套繩 🪢 期望拉著名駒 - 通膨 🐎 的狂奔；後腳 <a href="https://finance.ettoday.net/news/2274338">臺灣央行也甩出半息半碼的套繩</a> 也想拉住自己的名駒。通膨 🐎 的成長在 QE、 Covid-19 、烏俄戰爭和各國角力的餵養與訓練下長得全身是肌肉，稍有不慎有機會成為脫韁野馬。</p><span id="more"></span><h2 id="各國通膨狀況"><a href="#各國通膨狀況" class="headerlink" title="各國通膨狀況"></a>各國通膨狀況</h2><p>依 <a href="https://www.stockq.org/">StockQ.org</a> 的 GDP 排名來看，前 20 名國家通膨率小於 5% 有 4 個國家，分別為中國 🇨🇳、日本 🇯🇵、印尼 🇮🇩、瑞士 🇨🇭，意謂通膨是 2022 ~ 2023 年各國碰上的一堂課。</p><img width="732" alt="image" src="https://user-images.githubusercontent.com/6157049/174057528-5697257e-d2ff-4094-a1e3-7c048ee00394.png"><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>QE 讓金融市場上有寬裕的鈔票可以使用而避開通縮，而 Covid-19 的出現宛如助燒劑燒起一把又一把的野火，最後烏俄之爭開起通膨名駒奔跑的第一聲禮炮。現在股市必定經歷下降期，因為升息與 QT 執行在即，市場上的資金需要時間重新整理，因此現在短中線要進場投資建議再等等，長期投資可以一點一點分批進場。</p><p>投資是時間換金錢的遊戲，工作是時間換金錢的遊戲，投資從小學起；看報表、找消息、看準投都需要時間來累積。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Last updated: 2023-06-07 05:04:33&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6157049/174054919-95fcd121-e972-4a02-9e33-e8d0c9a33648.png&quot; alt=&quot;[Horse-drawn Vehicle](https://www.nicepng.com/maxp/u2t4i1q8y3a9o0e6/)&quot;&gt;&lt;br&gt;(source: &lt;a href=&quot;https://www.nicepng.com/&quot;&gt;NicePNG&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前腳 &lt;a href=&quot;https://www.cna.com.tw/news/aopl/202206160002.aspx&quot;&gt;美國聯準會甩出升息 3 碼&lt;/a&gt; 的套繩 🪢 期望拉著名駒 - 通膨 🐎 的狂奔；後腳 &lt;a href=&quot;https://finance.ettoday.net/news/2274338&quot;&gt;臺灣央行也甩出半息半碼的套繩&lt;/a&gt; 也想拉住自己的名駒。通膨 🐎 的成長在 QE、 Covid-19 、烏俄戰爭和各國角力的餵養與訓練下長得全身是肌肉，稍有不慎有機會成為脫韁野馬。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Talk" scheme="https://blog.ivanwei.co/tags/Talk/"/>
    
  </entry>
  
  <entry>
    <title>舊設備和 macOS Ventura 說再見</title>
    <link href="https://blog.ivanwei.co/zh-tw/2022-06-11-10-i_kwdoc3r1-85ll25z/"/>
    <id>https://blog.ivanwei.co/zh-tw/2022-06-11-10-i_kwdoc3r1-85ll25z/</id>
    <published>2022-06-11T01:14:25.000Z</published>
    <updated>2023-06-08T03:11:09.489Z</updated>
    
    <content type="html"><![CDATA[<p>Last updated: 2022-06-11 09:44:49</p><img width="1000" alt="macOS Ventura supported devices" src="https://user-images.githubusercontent.com/6157049/173181408-dd34836b-06c6-4ec8-9a39-9a0f03d333f6.png"><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>隨 macOS Ventura 即將到來，新一輪舊設備也將迎來成長的終點。這次將 2017 年以後產生的設備排除在更新名單中， M2 CPU 的發表，讓我期待 M2 Pro 、M2 Max 的表現，同時明確感受到 Apple 加速向 USB Type-C 支援的趨勢，也許和 <a href="https://www.theverge.com/2022/6/7/23156361/european-union-usb-c-wired-charging-iphone-lightning-ewaste">歐盟通過 2024 年秋季起手機必須使用 USB Type-C 做為充電端</a> 有關。相關討論我覺得可以看看這篇 <a href="https://www.theverge.com/2022/6/8/23159686/iphone-usbc-european-union-harmonized-charger-legislation-ewaste">What the EU’s new USB-C rules mean for the iPhone</a> ，我對 Apple 整體還是滿正面看待。</p><span id="more"></span><h3 id="無法更新的設備"><a href="#無法更新的設備" class="headerlink" title="無法更新的設備"></a>無法更新的設備</h3><table><thead><tr><th>設備</th><th>時間</th></tr></thead><tbody><tr><td>iMac Pro</td><td>2017 年</td></tr><tr><td>MacBook Pro</td><td>2017 年與後續機型</td></tr><tr><td>MacBook</td><td>2017 年與後續機型</td></tr><tr><td>iMac</td><td>2017 年底與後續機型</td></tr><tr><td>MacBook Air</td><td>2018 年與後續機型</td></tr><tr><td>Mac mini</td><td>2018 年與後續機型</td></tr><tr><td>Mac Pro</td><td>2019 年與後續機型</td></tr><tr><td>Mac Studio</td><td>2022 年</td></tr></tbody></table><h3 id="辨識機型"><a href="#辨識機型" class="headerlink" title="辨識機型"></a>辨識機型</h3><ol><li><a href="https://support.apple.com/zh-tw/HT201634">辨識 iMac 機型</a></li><li><a href="https://support.apple.com/zh-tw/HT201894">辨識 Mac mini 機型</a></li><li><a href="https://support.apple.com/zh-tw/HT202888">辨識 Mac Pro 機型</a></li><li><a href="https://support.apple.com/zh-tw/HT201862">辨識 MacBook Air 機型</a></li><li><a href="https://support.apple.com/zh-tw/HT201300">辨識 MacBook Pro 機型</a></li><li><a href="https://support.apple.com/zh-tw/HT201608">辨識 MacBook 機型</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;Last updated: 2022-06-11 09:44:49&lt;/p&gt;
&lt;img width=&quot;1000&quot; alt=&quot;macOS Ventura supported devices&quot; src=&quot;https://user-images.githubusercontent.com/6157049/173181408-dd34836b-06c6-4ec8-9a39-9a0f03d333f6.png&quot;&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;隨 macOS Ventura 即將到來，新一輪舊設備也將迎來成長的終點。這次將 2017 年以後產生的設備排除在更新名單中， M2 CPU 的發表，讓我期待 M2 Pro 、M2 Max 的表現，同時明確感受到 Apple 加速向 USB Type-C 支援的趨勢，也許和 &lt;a href=&quot;https://www.theverge.com/2022/6/7/23156361/european-union-usb-c-wired-charging-iphone-lightning-ewaste&quot;&gt;歐盟通過 2024 年秋季起手機必須使用 USB Type-C 做為充電端&lt;/a&gt; 有關。相關討論我覺得可以看看這篇 &lt;a href=&quot;https://www.theverge.com/2022/6/8/23159686/iphone-usbc-european-union-harmonized-charger-legislation-ewaste&quot;&gt;What the EU’s new USB-C rules mean for the iPhone&lt;/a&gt; ，我對 Apple 整體還是滿正面看待。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>三分鐘用 Git 學會使用 SVN</title>
    <link href="https://blog.ivanwei.co/zh-tw/2022-05-30-9-i_kwdoc3r1-85krd1o/"/>
    <id>https://blog.ivanwei.co/zh-tw/2022-05-30-9-i_kwdoc3r1-85krd1o/</id>
    <published>2022-05-30T06:15:02.000Z</published>
    <updated>2023-06-08T03:11:09.489Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/6157049/171004653-3aa3b1c9-d1c6-4c1b-80a8-f11fc4ac272b.png" alt="Subversion(SVN)"></p><p>Last updated: 2022-06-09 13:58:50</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>學過 Git 轉換到 SVN 只需要三分鐘既可完成基本操作，資料一樣會複製一份在本機，最大差異有 2 點</p><ol><li>svn add 只需要一次，之後只會 svn commit 和 svn delete ，少了 git add 暫存的機制</li><li><code>svn commit</code> 等同 <code>git commit</code> + <code>git push</code> ，沒 svn commit 前都不會被上傳與記錄</li></ol><span id="more"></span><h3 id="Git-與-SVN-指令的關係"><a href="#Git-與-SVN-指令的關係" class="headerlink" title="Git 與 SVN 指令的關係"></a>Git 與 SVN 指令的關係</h3><table><thead><tr><th>動作</th><th>Git</th><th>SVN</th></tr></thead><tbody><tr><td>複製 Repository</td><td>git clone</td><td>svn checkout</td></tr><tr><td>提交</td><td>git commit</td><td>svn commit (svn ci)</td></tr><tr><td>查看提交記錄</td><td>git show</td><td>svn cat</td></tr><tr><td>確認狀態</td><td>git status</td><td>svn status (svn st)</td></tr><tr><td>確認差異</td><td>git diff</td><td>svn diff</td></tr><tr><td>確認記錄</td><td>git log</td><td>svn log</td></tr><tr><td>增加</td><td>git add</td><td>svn add</td></tr><tr><td>移動</td><td>git mv</td><td>svn mv</td></tr><tr><td>刪除</td><td>git rm</td><td>svn rm &#x2F; svn del &#x2F; svn delete</td></tr><tr><td>取消修改</td><td>git checkout &#x2F; git reset</td><td>svn revert</td></tr><tr><td>建立分支</td><td>git branch</td><td>svn copy</td></tr><tr><td>切換分支</td><td>git checkout</td><td>svn switch</td></tr><tr><td>合併</td><td>git merge</td><td>svn merge</td></tr><tr><td>建立標籤</td><td>git tag</td><td>svn copy</td></tr><tr><td>更新</td><td>git pull &#x2F; git fetch</td><td>svn update</td></tr><tr><td>上傳到遠端</td><td>git push</td><td>svn commit</td></tr><tr><td>忽視檔案清單</td><td>.gitignore</td><td>.svnignore</td></tr></tbody></table><h3 id="進階"><a href="#進階" class="headerlink" title="進階"></a>進階</h3><h4 id="SVN-的-Git-submodule-x2F-subtree"><a href="#SVN-的-Git-submodule-x2F-subtree" class="headerlink" title="SVN 的 Git submodule &#x2F; subtree"></a>SVN 的 Git submodule &#x2F; subtree</h4><ul><li>顯示所有 svn:externals<br><code>$ svn propget -R svn:externals</code></li><li>變更 svn:externals<ol><li><code>$ svn pe svn:externals . --editor-cmd &lt;editor (e.g. vim)&gt;</code></li><li><code>$ svn commit -m &#39;&lt;message&gt;&#39; &lt;svn:externals 資料夾位置&gt;</code></li><li><code>$ svn update</code> ，更新 svn:externals 資料</li></ol></li></ul><h4 id="指定-Checkout-的版本"><a href="#指定-Checkout-的版本" class="headerlink" title="指定 Checkout 的版本"></a>指定 Checkout 的版本</h4><p><code>$ svn checkout &lt;repository&gt;/@&lt;commit number&gt;</code></p><hr><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ol><li><a href="https://backlog.com/git-tutorial/tw/reference/git-svn.html">連猴子都能懂的Git入門指南 - Git 和 Subversion的相比</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6157049/171004653-3aa3b1c9-d1c6-4c1b-80a8-f11fc4ac272b.png&quot; alt=&quot;Subversion(SVN)&quot;&gt;&lt;/p&gt;
&lt;p&gt;Last updated: 2022-06-09 13:58:50&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;學過 Git 轉換到 SVN 只需要三分鐘既可完成基本操作，資料一樣會複製一份在本機，最大差異有 2 點&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;svn add 只需要一次，之後只會 svn commit 和 svn delete ，少了 git add 暫存的機制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;svn commit&lt;/code&gt; 等同 &lt;code&gt;git commit&lt;/code&gt; + &lt;code&gt;git push&lt;/code&gt; ，沒 svn commit 前都不會被上傳與記錄&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="Learn" scheme="https://blog.ivanwei.co/tags/Learn/"/>
    
    <category term="SVN" scheme="https://blog.ivanwei.co/tags/SVN/"/>
    
    <category term="Git" scheme="https://blog.ivanwei.co/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>接近完美的 Blog 服務</title>
    <link href="https://blog.ivanwei.co/zh-tw/2022-03-08-8-i_kwdoc3r1-85ftha2/"/>
    <id>https://blog.ivanwei.co/zh-tw/2022-03-08-8-i_kwdoc3r1-85ftha2/</id>
    <published>2022-03-08T05:11:08.000Z</published>
    <updated>2023-06-08T03:11:09.489Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/6157049/156915738-4f2937d3-9bcf-4c07-9646-5633f9005d40.png" alt="Blogger"></p><p>Last updated: 2023-06-08 03:10:38</p><h3 id="2023-x2F-06-x2F-08-補充說明"><a href="#2023-x2F-06-x2F-08-補充說明" class="headerlink" title="2023&#x2F;06&#x2F;08 補充說明"></a>2023&#x2F;06&#x2F;08 補充說明</h3><p>Github 圖檔上傳機制似乎有調整，導致存在 Private repository 的 issue 中的圖檔無法讓任意人觀看；這個是一個補強性的功能，讓 private 的人必須擁有對應權限才可觀看，因此若打算使用我和一樣使用 Github 做為 Blog 服務則可選一個 Public repository 內開一個 issue ，將圖檔上傳至該處後將產生的圖檔 url 搬到原本的 issue 裡。 (本已是 Public 則可略過，因為是只有在 Private 轉到 Public 內容會發生)</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>現在 Blog 選擇有</p><ol><li>Google - <a href="https://www.blogger.com/">Blogger</a></li><li>城邦媒體子公司 - <a href="https://www.pixnet.net/">痞客邦</a></li><li><a href="https://medium.com/">Medium</a></li><li><a href="https://vocus.cc/">方格子</a></li><li>自架 Blog 需要準備 Server - <a href="https://wordpress.com/">Wordpress</a> 、 <a href="https://ghost.org/">Ghost</a></li><li>自架 Blog 需要準備可放 Web 的空間 - <a href="https://gohugo.io/">Hugo</a> 、 <a href="https://hexo.io/zh-tw/">Hexo</a> 、 <a href="https://jekyllrb.com/">Jekyll</a></li><li>借用 6 加上第三方 CMS<ul><li><a href="https://www.netlifycms.org/">Netlify CMS</a></li><li><a href="https://gohugo.io/tools/frontends/">Hugo 官方推薦</a></li><li><a href="https://github.com/jaredly/hexo-admin">Hexo admin</a></li></ul></li></ol><p>此篇以分享文 <a href="https://blog.ivanwei.co/zh-tw/2019-07-02-1-mdu6sxnzdwu0njmwmtqxmtq=/">透過 Github Issue 更新 Blog 內容 (Firebase 版)</a> 為改造，使用 Github 服務打造 <code>一站式 Blog 服務</code> 。</p><span id="more"></span><h3 id="一-準備環境"><a href="#一-準備環境" class="headerlink" title="(一) 準備環境"></a>(一) 準備環境</h3><ol><li>Git service (版控)<ul><li><a href="https://github.com/">微軟 - Github</a></li><li><a href="https://about.gitlab.com/">GitLab Inc - GitLab</a></li><li><a href="https://bitbucket.org/">Atlassian - Bitbucket</a></li><li><a href="https://gitee.com/">深圳奧思網絡科技 OSCHINA - Gitee</a></li><li><a href="https://coding.net/">騰訊子公司 - Coding</a></li><li><a href="https://gogs.io/">Gogs</a></li></ul></li><li>放置 Web 內容的空間</li><li>CI&#x2F;CD 服務</li><li>開立 Repository</li></ol><blockquote><p>以下範例使用 Github 、 Github Pages 、 Github Actions 和 Hexo。</p></blockquote><h3 id="二-取得-Personal-access-token"><a href="#二-取得-Personal-access-token" class="headerlink" title="(二) 取得 Personal access token"></a>(二) 取得 Personal access token</h3><ul><li>創立新的 <a href="https://github.com/settings/tokens/new">Personal access token</a></li><li>勾選 Repository 授權範圍 (Public 只需選 public_repo ，Private 則需所有控制權)  <img width="763" alt="Personal access token options" src="https://user-images.githubusercontent.com/6157049/157233155-5560e2fb-95df-489d-a9a3-81e4eec09416.png"></li><li>記下此次新建立的 Token</li></ul><h3 id="三-安裝-Blog-framework-Hexo-為例"><a href="#三-安裝-Blog-framework-Hexo-為例" class="headerlink" title="(三) 安裝 Blog framework (Hexo 為例)"></a>(三) 安裝 Blog framework (Hexo 為例)</h3><p>需要安裝步驟可參考之前的分享文 <a href="https://blog.ivanwei.co/zh-tw/2015-10-11-build-blog-by-hexojs/#Part-1-%E9%80%B2%E5%85%A5-Hexo-%E5%AE%89%E8%A3%9D-%E5%88%9D%E5%A7%8B%E5%8C%96">[Hexo] Gtihub 上架 Blog</a></p><h3 id="四-設定-Github-的-CMS"><a href="#四-設定-Github-的-CMS" class="headerlink" title="(四) 設定 Github 的 CMS"></a>(四) 設定 Github 的 CMS</h3><ol><li>選擇撰文的 Repository (可和 Blog 的網頁在不同 Repository)</li><li>設定撰文的 Github Actions<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">&lt;Action</span> <span class="string">的名稱&gt;</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">issues:</span></span><br><span class="line">    <span class="attr">types:</span> [<span class="string">opened</span>, <span class="string">edited</span>, <span class="string">closed</span>, <span class="string">reopened</span>, <span class="string">deleted</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">code</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">&lt;Blog</span> <span class="string">的</span> <span class="string">Repository</span> <span class="string">位置</span> <span class="string">(如</span> <span class="string">ivanwei/blog)&gt;</span></span><br><span class="line">          <span class="attr">ssh-key:</span>  <span class="string">&lt;設定訪問</span> <span class="string">Repository</span> <span class="string">的</span> <span class="string">ssh</span> <span class="string">key</span> <span class="string">(建議透過</span> <span class="string">$&#123;&#123;secrets.XXXX&#125;&#125;)&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">User</span> <span class="string">Information</span> <span class="string">(設定代理人，可以不設定)</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;ivanwei_slack@outlook.com&quot;</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;WorldEarthBot&quot;</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;16&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">@ivanwei/git-issue-hexo-cli</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">@ivanwei/git-issue-hexo-cli</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Refresh</span> <span class="string">blog</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">git-issue-hexo-cli</span> <span class="string">refresh</span> <span class="string">--git-token</span> <span class="string">&lt;放</span> <span class="string">Personal</span> <span class="string">access</span> <span class="string">token</span> <span class="string">(建議透過</span> <span class="string">$&#123;&#123;secrets.XXXX&#125;&#125;)&gt;</span> <span class="string">--label</span> <span class="string">&lt;篩選</span> <span class="string">issue</span> <span class="string">的</span> <span class="string">lable&gt;</span> <span class="string">-rep</span> <span class="string">&lt;撰文的</span> <span class="string">Repository</span> <span class="string">name</span> <span class="string">(如</span> <span class="string">blog-issue-source)&gt;</span> <span class="string">-u</span> <span class="string">&lt;Github</span> <span class="string">name</span> <span class="string">(如</span> <span class="string">ivanwei)&gt;</span> <span class="string">-o</span> <span class="string">&lt;匯出的位置</span> <span class="string">(如</span> <span class="string">./source/_posts/zh-tw)&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Add</span> <span class="string">commit</span> <span class="string">to</span> <span class="string">blog</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git add .</span></span><br><span class="line"><span class="string">          git commit -m &quot;Refresh blog&#x27;s contents&quot;</span></span><br><span class="line"><span class="string">          git push</span></span><br></pre></td></tr></table></figure></li><li>設定 Hexo 內容更新<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Publish</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">code</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">ssh-agent</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">webfactory/ssh-agent@v0.5.4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ssh-private-key:</span> <span class="string">$&#123;&#123;secrets.SSH_PRIVATE_KEY&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">User</span> <span class="string">Information</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;ivanwei_slack@outlook.com&quot;</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;WorldEarthBot&quot;</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;16&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Hexojs</span> <span class="string">and</span> <span class="string">packages</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install -g hexo</span></span><br><span class="line"><span class="string">          yarn install</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deployment</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h3><p>過去使用 Hexo 架 Blog 的主要缺點是必須開啟 IDE 之類工具撰寫完後再將內容推至 Github ，後來 Netlify CMS 出現很大程度解決撰文環境的不便，但始終覺得需登入到另一個服務有些不便，因此開始思考是否有符合以下條件的撰文介面 1) 使用 Markdown 、 2) 圖片可以透過複製貼上上傳 、 3) 能暫存 、 4) 能即時預覽 ，最後能有權限管理更完美，而 Github 的 issue 功能滿足所有條件，只差能不能取得 markdown 內容！</p><p>很幸運地翻閱 Github API 文件確定透過 API 可以取得 issue 的 markdown 內容，看似完美也有隱藏的內容需要注意， Github issue 使用中文撰寫時有機會出現 <code>&lt;0x8x&gt;</code> 的 ascii code ，在 Hexo 一些轉化成 XML 檔的套件會失效，文字也會出現特別符號，好在 Preview 能看出來，也算是有方便的解方。</p><h3 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h3><ul><li><a href="https://www.npmjs.com/package/@ivanwei/git-issue-hexo-cli">@ivanwei&#x2F;git-issue-hexo-cli</a> - 取得 issue 的 markdown 內容</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6157049/156915738-4f2937d3-9bcf-4c07-9646-5633f9005d40.png&quot; alt=&quot;Blogger&quot;&gt;&lt;/p&gt;
&lt;p&gt;Last updated: 2023-06-08 03:10:38&lt;/p&gt;
&lt;h3 id=&quot;2023-x2F-06-x2F-08-補充說明&quot;&gt;&lt;a href=&quot;#2023-x2F-06-x2F-08-補充說明&quot; class=&quot;headerlink&quot; title=&quot;2023&amp;#x2F;06&amp;#x2F;08 補充說明&quot;&gt;&lt;/a&gt;2023&amp;#x2F;06&amp;#x2F;08 補充說明&lt;/h3&gt;&lt;p&gt;Github 圖檔上傳機制似乎有調整，導致存在 Private repository 的 issue 中的圖檔無法讓任意人觀看；這個是一個補強性的功能，讓 private 的人必須擁有對應權限才可觀看，因此若打算使用我和一樣使用 Github 做為 Blog 服務則可選一個 Public repository 內開一個 issue ，將圖檔上傳至該處後將產生的圖檔 url 搬到原本的 issue 裡。 (本已是 Public 則可略過，因為是只有在 Private 轉到 Public 內容會發生)&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;現在 Blog 選擇有&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Google - &lt;a href=&quot;https://www.blogger.com/&quot;&gt;Blogger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;城邦媒體子公司 - &lt;a href=&quot;https://www.pixnet.net/&quot;&gt;痞客邦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vocus.cc/&quot;&gt;方格子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自架 Blog 需要準備 Server - &lt;a href=&quot;https://wordpress.com/&quot;&gt;Wordpress&lt;/a&gt; 、 &lt;a href=&quot;https://ghost.org/&quot;&gt;Ghost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自架 Blog 需要準備可放 Web 的空間 - &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; 、 &lt;a href=&quot;https://hexo.io/zh-tw/&quot;&gt;Hexo&lt;/a&gt; 、 &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;借用 6 加上第三方 CMS&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netlifycms.org/&quot;&gt;Netlify CMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gohugo.io/tools/frontends/&quot;&gt;Hugo 官方推薦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jaredly/hexo-admin&quot;&gt;Hexo admin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此篇以分享文 &lt;a href=&quot;https://blog.ivanwei.co/zh-tw/2019-07-02-1-mdu6sxnzdwu0njmwmtqxmtq=/&quot;&gt;透過 Github Issue 更新 Blog 內容 (Firebase 版)&lt;/a&gt; 為改造，使用 Github 服務打造 &lt;code&gt;一站式 Blog 服務&lt;/code&gt; 。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Blog" scheme="https://blog.ivanwei.co/tags/Blog/"/>
    
    <category term="Nodejs" scheme="https://blog.ivanwei.co/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>筆試滿分同時落榜的求職趣事</title>
    <link href="https://blog.ivanwei.co/zh-tw/2022-03-03-6-i_kwdoc3r1-85fb4bs/"/>
    <id>https://blog.ivanwei.co/zh-tw/2022-03-03-6-i_kwdoc3r1-85fb4bs/</id>
    <published>2022-03-03T00:37:41.000Z</published>
    <updated>2023-06-08T03:11:09.489Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/6157049/156517026-e6f86eb2-5817-418d-b484-3533dd916d58.png" alt="image"></p><p>Last updated: 2022-03-04 08:16:21</p><p>從上份工作離職後，整個人進入實現自我想法與找工作呈現 6:4 的狀態，造就這回有趣的面試經驗。求職一路永遠有驚喜，同時也是挑戰自我，願祝大家求職路上順心。</p><span id="more"></span><h3 id="第零關-投履歷"><a href="#第零關-投履歷" class="headerlink" title="第零關 - 投履歷"></a>第零關 - 投履歷</h3><p>1 月份在 104 看到一間滿感興趣的公司 - <a href="https://www.104.com.tw/company/1a2x6bl4y1">涬浢科技系統有限公司</a> 招募 React 人才，投履歷的幾天後順利收到 HR 約時間，有趣的求職旅程正式展開 (以下會馬賽克該公司非公開的資訊如員工電話、Email)</p><h3 id="第一關-HR-約時間聊天"><a href="#第一關-HR-約時間聊天" class="headerlink" title="第一關 - HR 約時間聊天"></a>第一關 - HR 約時間聊天</h3><p><img src="https://user-images.githubusercontent.com/6157049/156519925-365e3b94-fa0f-40dc-8cef-3c9836b349a8.png" alt="HR 約時間"></p><blockquote><p>順利通過</p></blockquote><h3 id="第二關-技術考題"><a href="#第二關-技術考題" class="headerlink" title="第二關 - 技術考題"></a>第二關 - 技術考題</h3><p>過完年 HR 通知第一關過關，同時提供技術考題目並要求二天內交卷！(二天內準時交卷)<br><img src="https://user-images.githubusercontent.com/6157049/156521819-529a39b4-5cdc-4dd7-9145-6a543510e30f.png" alt="技術考題與回報提交"></p><blockquote><p>沒通過，事後得知作答皆正確，沒通過的原因放後記</p></blockquote><h3 id="失敗的原因"><a href="#失敗的原因" class="headerlink" title="失敗的原因"></a>失敗的原因</h3><p>HR 是一位很親切的人，在第一關聊天時整體很輕鬆、舒服！</p><p>在第二關技術考題沒過時拜託 HR 幫忙詢問哪一題錯誤，好讓我在接下來的求職路上做加強。</p><img width="788" alt="發自內心謝謝HR幫忙" src="https://user-images.githubusercontent.com/6157049/156523444-5047f4fc-94d8-4fe8-8619-fe3ee4bfa78c.png"><p>隔天 HR 給予技術主管的回覆，沒通過的原因是風格，可以說 筆試得滿分 💯 同時落榜！</p><img width="692" alt="技術主管的回覆" src="https://user-images.githubusercontent.com/6157049/156523940-4113c59f-b56b-4c8c-899e-019184ac1623.png"><p>謝謝涬浢科技 HR 幫忙，她真得是少數讓我感到親切的 HR 。</p><h3 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h3><p>投履歷前看看有沒有 <code>過來人</code> ，在 <a href="https://interview.tw/c/B9HK">面試趣</a> 看到這 (我沒加會員看不見更多，有興趣自行解鎖) ，有種一言難盡的味道，但切記別人不適合不等於自己不適合，也造就我一次有趣的求職經驗。<br><img width="751" alt="面試趣" src="https://user-images.githubusercontent.com/6157049/156526546-230c5ca6-1355-4252-897f-ab5f92c3c3e0.png"></p><p>建議應徵者作答前試著詢問是否有 “風格” 上的限制，同時了解風格有哪些規範！我取得的考題上只給予 <code>開始</code> 與 <code>結果</code> ，中間的開發屬於實作，也是此次因風格不符而沒有機會進第三關的原因。當今 React 開發多數會選擇使用 Hook ，考題上我選擇傳統 Class ，可惜沒猜中。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6157049/156517026-e6f86eb2-5817-418d-b484-3533dd916d58.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;Last updated: 2022-03-04 08:16:21&lt;/p&gt;
&lt;p&gt;從上份工作離職後，整個人進入實現自我想法與找工作呈現 6:4 的狀態，造就這回有趣的面試經驗。求職一路永遠有驚喜，同時也是挑戰自我，願祝大家求職路上順心。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Discord 整合 Github</title>
    <link href="https://blog.ivanwei.co/zh-tw/2022-02-15-4-i_kwdoc3r1-85d1-lw/"/>
    <id>https://blog.ivanwei.co/zh-tw/2022-02-15-4-i_kwdoc3r1-85d1-lw/</id>
    <published>2022-02-14T21:59:34.000Z</published>
    <updated>2022-02-14T22:03:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/6157049/153997637-38f0e0c4-2b26-42ee-a0ae-9c715da2291a.png" alt="image"></p><p>過去透過 Slack 整合 Github 訊息，這次透過 Discord 整合 Github ，三個步驟完成整合。</p><span id="more"></span><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>進入文字頻道的 <code>整合</code> 設定並點擊 <code>建立 Webhook</code><br><img width="997" alt="image" src="https://user-images.githubusercontent.com/6157049/154000021-4ea140f0-6bbb-4863-9a45-fade7cb5fbfe.png"></p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>成功建立 Webook 後點擊複製 Webhook 網址<br><img width="799" alt="image" src="https://user-images.githubusercontent.com/6157049/154000132-5c05afe9-cf75-467b-b4fd-6e1f5901fe01.png"></p><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>到 Github repository 的 Setting 進入 Webhook 設定頁<br><img width="1110" alt="image" src="https://user-images.githubusercontent.com/6157049/154000485-d2a1c7cb-fe6d-4a8e-98e8-b001c49f5b0c.png"></p><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p>將 Discord 複製的 Webhook 貼到 <code>Payload URL</code> ，最後面加上 <code>/github</code>，同時將 Content type 選為 <code>application/json</code><br><img width="756" alt="image" src="https://user-images.githubusercontent.com/6157049/154001120-6fd3c5d0-c712-4dc7-99d2-cc711c8fd5c3.png"></p><h2 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h2><p>設定要推送到 Discord 和確認 Active 已打勾，既可點擊最下方的 Add webhook<br><img width="756" alt="image" src="https://user-images.githubusercontent.com/6157049/154001239-b038af1c-144c-4686-94ad-b45102e74bc8.png"></p><h2 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h2><p>確認建立的 Github webhook 有打勾通過<br><img width="787" alt="image" src="https://user-images.githubusercontent.com/6157049/154001510-96cf6b49-e667-4b64-8751-9a32a3c35dfe.png"></p><hr><ul><li><a href="https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks">參考資料</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6157049/153997637-38f0e0c4-2b26-42ee-a0ae-9c715da2291a.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;過去透過 Slack 整合 Github 訊息，這次透過 Discord 整合 Github ，三個步驟完成整合。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>從初探 TypeORM 到放棄</title>
    <link href="https://blog.ivanwei.co/zh-tw/2021-12-22-3-i_kwdoc3r1-85axc55/"/>
    <id>https://blog.ivanwei.co/zh-tw/2021-12-22-3-i_kwdoc3r1-85axc55/</id>
    <published>2021-12-22T00:55:20.000Z</published>
    <updated>2022-01-01T06:45:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/6157049/147055525-2eac3142-0c51-4c13-83fb-8ec528cfad16.png" alt="TypeORM"></p><p>放棄的原因有二</p><ol><li>文件的不完善，無形間拉長開發時程</li><li>Issue 、維護、開發三者接近停止狀況</li></ol><span id="more"></span><p>初探時碰到的狀況</p><ol><li><a href="https://typeorm.io/#/using-ormconfig/using-environment-variables">TypeORM 初始設定</a> 若使用環境變數需要花時間測試，因為這部分只能提供變數名稱</li><li>使用 Google 找資料很容易找到由 <a href="https://github.com/OrkhanAlikhanov">OrkhanAlikhanov</a> fork 出來的 <a href="https://github.com/OrkhanAlikhanov/typeorm">TypeORM 使用文件</a> ，同時 TypeORM 主要維運者之一的 <a href="https://github.com/pleerock">pleerock</a> 也持續推送內容讓 <a href="https://orkhan.gitbook.io/typeorm/docs">TypeORM Gitbook</a> 與 TypeORM 狀況一致，但內容仍然有可能是舊的。</li></ol><p>於是開始找一下有關 TypeORM 的問題，整理如下</p><ol><li>截至 2021-12-22 累積 Issue 有 1384<ul><li>列入 Bug 有 779 個，最舊的 Bug 為 2018-02-28</li></ul></li><li><a href="https://v2ex.com/t/763563#r_10344012">v2ex 的 felixin</a> 提到的狀況<br> <img src="https://user-images.githubusercontent.com/6157049/147061875-e10ebc29-4546-4a59-ac4f-6cfd3e91fec0.png" alt="image"></li><li><a href="https://github.com/typeorm/typeorm/issues/4686">2019-09-04 被關閉的 Issue</a></li><li><a href="https://www.zhihu.com/question/266267293">知乎 - 如何評論 TypeORM</a></li><li><a href="https://www.porschebz.com/posts/42345.html">Porschebz - NestJs 中使用 Typeorm 的問題總結</a></li></ol><p>TypeORM 有很好的對 TypeScript 的適配性，有很漂亮的寫作方式，然而</p><ul><li>文件不完善</li><li>複雜性高需要借用 SQL Query</li><li>專案處於低谷期</li></ul><p>以上評估認為不適合我目前的一人專案，持續投入有問題可能需要花更多時間處理，果斷初探 3 天放棄使用 TypeORM 做為專案第一版使用的 ORM。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6157049/147055525-2eac3142-0c51-4c13-83fb-8ec528cfad16.png&quot; alt=&quot;TypeORM&quot;&gt;&lt;/p&gt;
&lt;p&gt;放棄的原因有二&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;文件的不完善，無形間拉長開發時程&lt;/li&gt;
&lt;li&gt;Issue 、維護、開發三者接近停止狀況&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>DCIT 改版 Part 1</title>
    <link href="https://blog.ivanwei.co/zh-tw/2020-10-04-dcit-upgrade/"/>
    <id>https://blog.ivanwei.co/zh-tw/2020-10-04-dcit-upgrade/</id>
    <published>2020-10-04T09:35:12.000Z</published>
    <updated>2023-06-08T03:11:09.489Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2018/05/16/DCIT.png" alt="Developer Conferences In Taiwan"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>DCIT 開源超過兩年，也是到了該改版的時間點，這次修正 API 長久以來的 Bug 和讓 Github action 正常恢復工作 🧐</p><span id="more"></span><h2 id="什麼是-DCIT"><a href="#什麼是-DCIT" class="headerlink" title="什麼是 DCIT"></a>什麼是 DCIT</h2><p>DCIT 全名 <a href="https://github.com/IvanWei/developer-conferences-in-taiwan">Developer Conferences In Taiwan</a> 是專門收集在臺灣開發研討會時間、地點的計劃，資訊來源主要來自閒逛 FB 、廣告、社群取得與整理至 <a href="https://docs.google.com/spreadsheets/d/1WFxqI3Ow_9GC_h5Xd7NUy_b1X-U8Ptb-u-arLGYtmGQ/edit#gid=0">Google Sheet</a> ，來源基本可靠。</p><p>歡迎各路朋友一同參與維護 DCIT。</p><h2 id="DCIT-運作流程"><a href="#DCIT-運作流程" class="headerlink" title="DCIT 運作流程"></a>DCIT 運作流程</h2><p>Google Sheet 新增 &#x2F; 修改資料 → Github action 定時執行 Makefile 下載 Google Sheet 內容和取得 <a href="https://github.com/IvanWei/developer-conferences-in-taiwan/blob/master/data/list-of-organizations.json">活動組織者清單</a> → 匯出新的 README.md → 更新到 Repository</p><h2 id="待執行或改善項目"><a href="#待執行或改善項目" class="headerlink" title="待執行或改善項目"></a>待執行或改善項目</h2><ul><li>開放 Google sheet 權限</li><li>調整 Github action 更新 DCIT 流程</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/2018/05/16/DCIT.png&quot; alt=&quot;Developer Conferences In Taiwan&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;DCIT 開源超過兩年，也是到了該改版的時間點，這次修正 API 長久以來的 Bug 和讓 Github action 正常恢復工作 🧐&lt;/p&gt;</summary>
    
    
    
    
    <category term="Conference" scheme="https://blog.ivanwei.co/tags/Conference/"/>
    
    <category term="Privacy" scheme="https://blog.ivanwei.co/tags/Privacy/"/>
    
  </entry>
  
  <entry>
    <title>透過 Github Issue 更新 Blog 內容 (Firebase 版)</title>
    <link href="https://blog.ivanwei.co/zh-tw/2019-07-02-1-mdu6sxnzdwu0njmwmtqxmtq=/"/>
    <id>https://blog.ivanwei.co/zh-tw/2019-07-02-1-mdu6sxnzdwu0njmwmtqxmtq=/</id>
    <published>2019-07-01T20:28:36.000Z</published>
    <updated>2022-02-27T06:21:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>主流寫文章的網站有 <a href="https://www.pixnet.net/">Pixnet</a> 、  <a href="https://medium.com/">Medium</a> 、 <a href="https://pages.github.com/">Github page</a> 、 <a href="https://ghost.org/">ghost</a> 等，除了 Github page<br> 外其餘皆自帶即時的 <strong>內容管理</strong> ；然而 Github page 是許多剛入門寫程式人第一個架站的首選或架 Blog ，卻無法隨地更新 Blog 內容，進而讓我懶得更新 Blog。</p><p>苦思之後有了今天這篇，分享如何讓 Github Issue 成為 Blog 的內容管理器。</p><span id="more"></span><h2 id="第零步-準備好使用到的服務"><a href="#第零步-準備好使用到的服務" class="headerlink" title="第零步 - 準備好使用到的服務"></a>第零步 - 準備好使用到的服務</h2><ol><li>Github<ul><li>使用其 Issue 、 Webhook 、 API 、 Developer 身份 (Free)</li></ul></li><li>Travis CI<ul><li>需要透過 Travis CI 的手動觸發進行部署</li><li><a href="https://circleci.com/">Circle CI</a> 尚未支援手動觸發</li></ul></li><li>準備一臺 Server<ul><li>部署 Github 的 Webhook 使用</li><li>範列使用 <a href="https://firebase.google.com/docs/functions">Firebase functions</a> ，使用此方法先確認自己有能使用的信用卡，為了解除某些限制而不得不的處理</li></ul></li><li>Node.js v8.9.0 or above</li></ol><h2 id="第一步-下載-Issue-的-Markdown-內容"><a href="#第一步-下載-Issue-的-Markdown-內容" class="headerlink" title="第一步 - 下載 Issue 的 Markdown 內容"></a>第一步 - 下載 Issue 的 Markdown 內容</h2><h3 id="取得-Repository-操作權限"><a href="#取得-Repository-操作權限" class="headerlink" title="取得 Repository 操作權限"></a>取得 Repository 操作權限</h3><ol><li><p>在 Profile 中進入 Developer settings<br> <img src="https://user-images.githubusercontent.com/6157049/60479293-da7bb780-9cb7-11e9-8df2-67dee6b1a156.png" alt="Developer settings"></p></li><li><p>選擇建立 <strong>Personal access tokens</strong><br> <img src="https://user-images.githubusercontent.com/6157049/60480720-35fc7400-9cbd-11e9-823f-2761bee37eab.png" alt="Personal access tokens"></p></li><li><p>授權範圍選擇 public_repo ，若指定的 Repository 是 Private 則必須勾所有控制權<br> <img src="https://user-images.githubusercontent.com/6157049/60481253-2c740b80-9cbf-11e9-87d6-6d02ad71ff14.png" alt="Repository controller"></p></li><li><p>記住產生出來的 Token ，試試能否取到 Repository 裡的 issues ，正確會吐 Array 回來，而 issue 的內容存在 body 中<br> <code>$ curl -H &quot;Authorization: token [Token]&quot; https://api.github.com/repos/[user id]/[repository name]/issues</code></p></li><li><p>上一步沒問題既可透過 Ajax 方式取得 Response 後，將 issue 存成 Markdown 檔，下面以 fetch 為範例</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">&#x27;node-fetch&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://api.github.com/repos/ivanwei/blog/issues&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`token <span class="subst">$&#123;gitToken&#125;</span>`</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">then</span>(<span class="keyword">async</span> (response) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;result 的跑迴圈取一個 body&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;error handler&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><h3 id="issue-存成-Markdown"><a href="#issue-存成-Markdown" class="headerlink" title="issue 存成 Markdown"></a>issue 存成 Markdown</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs =<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> util =<span class="built_in">require</span>(<span class="string">&#x27;util&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將 fs.writeFile 包成 Promise</span></span><br><span class="line"><span class="keyword">const</span> writeFile = util.<span class="title function_">promisify</span>(fs.<span class="property">writeFile</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 建立檔案或覆寫檔案</span></span><br><span class="line"><span class="title function_">writeFile</span>(<span class="string">`<span class="subst">$&#123;outputPath&#125;</span>/$ci-gh-integration.md`</span>, content)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;File was created.&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;File was not created.&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="第一步-小結，還是使用寫好的工具做比較簡單"><a href="#第一步-小結，還是使用寫好的工具做比較簡單" class="headerlink" title="第一步 - 小結，還是使用寫好的工具做比較簡單"></a>第一步 - 小結，還是使用寫好的工具做比較簡單</h3><p>以上兩者結合既完成 issue 轉成 Markdown ，若覺得過程可以使用 <a href="https://github.com/IvanWei/blog-content-source-cli">@ivanwei&#x2F;blog-content-source-cli</a> ，將上述打包在一起，用法也相對簡單許許。</p><h4 id="安裝-ivanwei-x2F-git-issue-hexo-cli"><a href="#安裝-ivanwei-x2F-git-issue-hexo-cli" class="headerlink" title="安裝 @ivanwei&#x2F;git-issue-hexo-cli"></a>安裝 @ivanwei&#x2F;git-issue-hexo-cli</h4><blockquote><p>$ yarn add @ivanwei&#x2F;git-issue-hexo-cli</p></blockquote><h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><blockquote><p>$ b.content refresh -R &lt;Repository&gt; -u &lt;username&gt; -l &lt;Issue 有這 label 既存成 MD 檔&gt; –git-token <Github Personal access token> -o &lt;存檔的資料夾&gt;</p></blockquote><p>接下來會使用 <a href="https://github.com/IvanWei/git-issue-hexo-cli">@ivanwei&#x2F;git-issue-hexo-cli</a> 來操作 issue 部分，有興趣自己手動做可以看 <a href="https://developer.github.com/v3/issues/#list-issues-for-a-repository">Github API</a> ，因為前者也是使用同樣的內容加上一些步驟集結而成。</p><h2 id="第二步-設定-Github-Webhook"><a href="#第二步-設定-Github-Webhook" class="headerlink" title="第二步 - 設定 Github Webhook"></a>第二步 - 設定 Github Webhook</h2><p>此處內容以 firebase functions 配上 Express 為範例， firebase 相關設定可以看<a href="https://firebase.google.com/docs/functions/get-started">這篇</a> 或按下面步驟建立</p><h3 id="建立-Firebase-專案"><a href="#建立-Firebase-專案" class="headerlink" title="建立 Firebase 專案"></a>建立 Firebase 專案</h3><p>首到 <a href="https://console.firebase.google.com/">Firebase 建立專案</a></p><h3 id="安裝-Firebase-CLI"><a href="#安裝-Firebase-CLI" class="headerlink" title="安裝 Firebase CLI"></a>安裝 Firebase CLI</h3><blockquote><p>$ npm install -g firebase-tools &#x2F; $ yarn global add firebase-tools</p></blockquote><h3 id="登入-Firebase"><a href="#登入-Firebase" class="headerlink" title="登入 Firebase"></a>登入 Firebase</h3><blockquote><p>$ firebase login</p></blockquote><h3 id="初始化-firebase-functions"><a href="#初始化-firebase-functions" class="headerlink" title="初始化 firebase functions"></a>初始化 firebase functions</h3><blockquote><p>$ firebase init functions</p></blockquote><h3 id="設定-Firebase-project"><a href="#設定-Firebase-project" class="headerlink" title="設定 Firebase project"></a>設定 Firebase project</h3><h4 id="索取-Firebase-現有的-Project-清單"><a href="#索取-Firebase-現有的-Project-清單" class="headerlink" title="索取 Firebase 現有的 Project 清單"></a>索取 Firebase 現有的 Project 清單</h4><blockquote><p>$ firebase list</p></blockquote><p><img src="https://user-images.githubusercontent.com/6157049/60560406-432f6680-9d82-11e9-88e9-4b776f2dd14e.png" alt="Firebase List"></p><h4 id="指定-Firebase-使用的專案"><a href="#指定-Firebase-使用的專案" class="headerlink" title="指定 Firebase 使用的專案"></a>指定 Firebase 使用的專案</h4><blockquote><p>$ firebase use <project id></p></blockquote><h3 id="撰寫-Serverless-內容"><a href="#撰寫-Serverless-內容" class="headerlink" title="撰寫 Serverless 內容"></a>撰寫 Serverless 內容</h3><h4 id="切換到-functions-資料夾"><a href="#切換到-functions-資料夾" class="headerlink" title="切換到 functions 資料夾"></a>切換到 functions 資料夾</h4><blockquote><p>$ cd functions</p></blockquote><h4 id="安裝-express-和-node-fetch"><a href="#安裝-express-和-node-fetch" class="headerlink" title="安裝 express 和 node-fetch"></a>安裝 express 和 node-fetch</h4><blockquote><p>$ npm install express node-fetch &#x2F; yarn add express node-fetch</p></blockquote><h4 id="更新-index-js"><a href="#更新-index-js" class="headerlink" title="更新 index.js"></a>更新 index.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> functions = <span class="built_in">require</span>(<span class="string">&#x27;firebase-functions&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">&#x27;node-fetch&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = <span class="title function_">express</span>();</span><br><span class="line">server.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;issue&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123;title, state, body&#125; = issue;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 判斷 Issue 是否被關閉</span></span><br><span class="line">    <span class="keyword">if</span> (state === <span class="string">&#x27;open&#x27;</span>) &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">&#x27;Publish!!&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">&#x27;No Publish, status is not open!!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(err);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">next</span>(err);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">github</span> = functions.<span class="property">https</span>.<span class="title function_">onRequest</span>(server);</span><br></pre></td></tr></table></figure><h4 id="部署到-Firebase-functions"><a href="#部署到-Firebase-functions" class="headerlink" title="部署到 Firebase functions"></a>部署到 Firebase functions</h4><blockquote><p>$ firebase deploy –only functions</p></blockquote><p>部署後 Terminal 會回傳一串 URL ，此時可以使用 cURL 、 Postman 或寫個 Ajax 程序試送 request ，試試看是否能收到 response。</p><p>Firebase 回傳的 URL 會長得像</p><blockquote><p>https:&#x2F;&#x2F;&lt;你選得專案地方&gt;-&lt;專案 ID&gt;.cloudfunctions.net&#x2F;&lt;export 的名稱&gt;</p></blockquote><p>若沒看到或忘記這串 URL ，可以到指定的 Firebase 專案點 functions ，找找要的 <code>export 名稱</code></p><p><img src="https://user-images.githubusercontent.com/6157049/60562044-78d74e00-9d88-11e9-98e6-a52a8c884ddd.png" alt="Firebase menu"></p><h4 id="最後一步，準備好信用卡"><a href="#最後一步，準備好信用卡" class="headerlink" title="最後一步，準備好信用卡"></a>最後一步，準備好信用卡</h4><p><strong>綁定信用卡會收到 40 臺幣信用卡的過卡費，如果選擇 Blaze 方案可以使用的免費額度有些不同，詳細可以到底部參考資料查閱。</strong></p><p>因為 <a href="https://firebase.google.com/pricing">Firebase functions 免費版</a>對外送 Request 限定只能是 Google service ，需要升級解除此項限制。</p><p><img src="https://user-images.githubusercontent.com/6157049/60562403-00718c80-9d8a-11e9-8c30-0e02acb0d8a9.png" alt="Firebase quota"></p><h2 id="第三步-設定手動觸發-Travis-CI"><a href="#第三步-設定手動觸發-Travis-CI" class="headerlink" title="第三步 - 設定手動觸發 Travis CI"></a>第三步 - 設定手動觸發 Travis CI</h2><p>透過 <a href="https://docs.travis-ci.com/user/triggering-builds/">Travis CI API</a> 來觸發，操作方式就直接 Show code；至於 Travis CI 對 Repository 操作權限，可以看 Tommy Chen 的 <a href="https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/">用 Travis CI 自動部署網站到 GitHub</a></p><h3 id="設定-Travis-CI-要做的事"><a href="#設定-Travis-CI-要做的事" class="headerlink" title="設定 Travis CI 要做的事"></a>設定 Travis CI 要做的事</h3><h4 id="參數設定"><a href="#參數設定" class="headerlink" title="參數設定"></a>參數設定</h4><p>這裡的設定可以參考 <a href="https://docs.travis-ci.com/user/job-lifecycle/">.travis.yml</a> 的寫法，設定則寫在 config 裡面。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> body = &#123;</span><br><span class="line">  <span class="string">&quot;request&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;branch&quot;</span>:<span class="string">&quot;master&quot;</span>,</span><br><span class="line">    <span class="string">&quot;config&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;node_js&quot;</span>: [<span class="string">&quot;8&quot;</span>],</span><br><span class="line">      <span class="string">&quot;before_install&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;export TZ=Asia/Taipei&quot;</span>,</span><br><span class="line">        <span class="string">&quot;openssl aes-256-cbc -K $XXXX_key -iv $OOOO_iv -in ./.travis/id_rsa.enc -out ~/.ssh/id_rsa -d&quot;</span>,</span><br><span class="line">        <span class="string">&quot;chmod 600 ~/.ssh/id_rsa&quot;</span>,</span><br><span class="line">        <span class="string">&quot;eval $(ssh-agent)&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ssh-add ~/.ssh/id_rsa&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cp .travis/ssh_config ~/.ssh/config&quot;</span>,</span><br><span class="line">        <span class="string">&quot;npm config set registry https://registry.npmjs.org/&quot;</span>,</span><br><span class="line"></span><br><span class="line">        # <span class="title class_">Travis</span> <span class="variable constant_">CI</span> 預設使用 https ，為了後續操作則更新為 git</span><br><span class="line">        <span class="string">&quot;git remote set-url origin git@github.com:IvanWei/blog.git&quot;</span>,</span><br><span class="line"></span><br><span class="line">        # 下載 <span class="title class_">Issue</span> 內容，然後轉存成 <span class="variable constant_">MD</span> 檔</span><br><span class="line">        <span class="string">&quot;npm install -g @ivanwei/blog-content-source-cli&quot;</span>,</span><br><span class="line">        <span class="string">&quot;b.content refresh -R &lt;Repo&gt; -u &lt;username&gt; -l &lt;發佈的目標 Label&gt; --git-token &lt;Github 的 Personal access token&gt; -o &lt;存 Markdown 的資料夾&gt;&quot;</span>,</span><br><span class="line"></span><br><span class="line">        # 將更動的檔案更新到目標 <span class="title class_">Repository</span></span><br><span class="line">        <span class="string">&quot;git checkout master&quot;</span>,</span><br><span class="line">        <span class="string">&quot;git add .&quot;</span>,</span><br><span class="line">        <span class="string">&quot;git status&quot;</span>,</span><br><span class="line">        <span class="string">&quot;git commit -m \&quot;Write something\&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;git push origin master&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;script&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;echo \&quot;OK!!\&quot;&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="送-Ajax-request"><a href="#送-Ajax-request" class="headerlink" title="送 Ajax request"></a>送 Ajax request</h4><p>打 request 有幾點需要注意</p><ol><li>URL 的 <code>%2F</code> 不可替換成 <code>/</code></li><li>headers 四項都需要設定上<ul><li><code>&#39;Content-Type&#39;: &#39;application/json&#39;</code></li><li><code>&#39;Accept&#39;: &#39;application/json&#39;</code></li><li><code>&#39;Travis-API-Version&#39;: 3</code></li><li><code>&#39;Authorization&#39;: &#39;token &#39; + travis_token</code></li></ul></li><li>注意使用哪一種 Travis CI ，內容上可以參考 <a href="https://developer.travis-ci.org/gettingstarted">這裡</a><ul><li>參考資料 Private 部分不確定是否是漏洞，免費版的 <code>.org</code> 也是可以觸發 Private repository</li></ul></li><li>Travis CI API 免費版 1 小時能打 10 次，而回補次數是按時間一點一點回復，而非下一個小時一次回復成 10 次</li><li>Travis CI 的 token 取得方式<ul><li>方式一使用 <a href="https://developer.travis-ci.org/authentication">Travis CLI 取得</a></li><li>方式二從 <a href="https://developer.travis-ci.org/explore/#explorer">API explorer</a> 取得 (黑色區塊滑鼠移過去會顯示出 Token)，<em>沒有直接操作 Travis CI 需求的話建議使用此方法</em><br><img src="https://user-images.githubusercontent.com/6157049/60505575-8f34c980-9cf6-11e9-85b4-084dd5af8410.png" alt="API explorer"></li></ul></li><li>最後別忘了要寫成 Ajax 送 request<ul><li>以下是範例  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`https://api.travis-ci.org/repo/<span class="subst">$&#123;username&#125;</span>%2F<span class="subst">$&#123;repo&#125;</span>/requests`</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Travis-API-Version&#x27;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`token <span class="subst">$&#123;travis_token&#125;</span>`</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(body),</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ol><li><a href="https://firebase.google.com/support/faq/#pricing">Firebase Blaze 方案免費額度</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;主流寫文章的網站有 &lt;a href=&quot;https://www.pixnet.net/&quot;&gt;Pixnet&lt;/a&gt; 、  &lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt; 、 &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github page&lt;/a&gt; 、 &lt;a href=&quot;https://ghost.org/&quot;&gt;ghost&lt;/a&gt; 等，除了 Github page&lt;br&gt; 外其餘皆自帶即時的 &lt;strong&gt;內容管理&lt;/strong&gt; ；然而 Github page 是許多剛入門寫程式人第一個架站的首選或架 Blog ，卻無法隨地更新 Blog 內容，進而讓我懶得更新 Blog。&lt;/p&gt;
&lt;p&gt;苦思之後有了今天這篇，分享如何讓 Github Issue 成為 Blog 的內容管理器。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
